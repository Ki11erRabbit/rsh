   Compiling rsh v0.1.0 (/home/ki11errabbit/Documents/Programing-Projects/Rust/rsh)
error: failed to run custom build command for `rsh v0.1.0 (/home/ki11errabbit/Documents/Programing-Projects/Rust/rsh)`

Caused by:
  process didn't exit successfully: `/home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/target/debug/build/rsh-e0d6cadaa66599d4/build-script-build` (exit status: 1)
  --- stdout
  processing file `/home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop`
  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:58:5: 58:49: Conflict detected

      when in this state:
    CompoundList = Term (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term (*) Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Separator = (*) NewlineList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Separator = (*) SeparatorOp Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SeparatorOp = (*) r#";|\\&"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term (*) Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#";|\\&"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:58:5: 58:49: Local ambiguity detected

    The problem arises after having observed the following symbols in the input:
      Pattern ")" Linebreak Term
    At that point, if the next token is a `r#"\\n+"#`, then the parser can proceed in two different ways.

    First, the parser could execute the production at /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:58:5: 58:49, which would consume the top 1 token(s) from the stack and produce a `CompoundList`. This might then yield a parse tree like
      Pattern ")" Linebreak Term           ╷ Linebreak
      │                     └─CompoundList─┘         │
      └─CaseItemNS───────────────────────────────────┘

    Alternatively, the parser could shift the `r#"\\n+"#` token and later use it to construct a `NewlineList`. This might then yield a parse tree like
      Term r#"\\n+"#     ╷
      │    ├─NewlineList─┤
      │    └─Separator───┤
      └─CompoundList─────┘

    See the LALRPOP manual for advice on making your grammar LR(1).

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:154:5: 154:110: Conflict detected

      when in this state:
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = Word CmdSuffix (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `"<"` we can reduce to a `SimpleCommand` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:154:5: 154:110: Conflict detected

      when in this state:
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = Word CmdSuffix (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `">"` we can reduce to a `SimpleCommand` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:154:5: 154:110: Conflict detected

      when in this state:
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = Word CmdSuffix (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#">>"#` we can reduce to a `SimpleCommand` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:154:5: 154:110: Conflict detected

      when in this state:
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = Word CmdSuffix (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[0-9]+"#` we can reduce to a `SimpleCommand` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:154:5: 154:110: Conflict detected

      when in this state:
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = Word CmdSuffix (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[_|[:alpha:]]+=.+"#` we can reduce to a `SimpleCommand` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:152:5: 152:135: Conflict detected

      when in this state:
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = CmdPrefix Word CmdSuffix (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `"<"` we can reduce to a `SimpleCommand` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:152:5: 152:135: Conflict detected

      when in this state:
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = CmdPrefix Word CmdSuffix (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `">"` we can reduce to a `SimpleCommand` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:152:5: 152:135: Conflict detected

      when in this state:
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = CmdPrefix Word CmdSuffix (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#">>"#` we can reduce to a `SimpleCommand` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:152:5: 152:135: Conflict detected

      when in this state:
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = CmdPrefix Word CmdSuffix (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[0-9]+"#` we can reduce to a `SimpleCommand` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:152:5: 152:135: Conflict detected

      when in this state:
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdSuffix = CmdSuffix (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = CmdPrefix Word CmdSuffix (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[_|[:alpha:]]+=.+"#` we can reduce to a `SimpleCommand` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:59:5: 59:67: Conflict detected

      when in this state:
    CompoundList = NewlineList Term (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term (*) Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Separator = (*) NewlineList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Separator = (*) SeparatorOp Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SeparatorOp = (*) r#";|\\&"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term (*) Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#";|\\&"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:59:5: 59:67: Local ambiguity detected

    The problem arises after having observed the following symbols in the input:
      Pattern ")" Linebreak NewlineList Term
    At that point, if the next token is a `r#"\\n+"#`, then the parser can proceed in two different ways.

    First, the parser could execute the production at /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:59:5: 59:67, which would consume the top 2 token(s) from the stack and produce a `CompoundList`. This might then yield a parse tree like
      Pattern ")" Linebreak NewlineList Term Linebreak
      │                     └─CompoundList─┘         │
      └─CaseItemNS───────────────────────────────────┘

    Alternatively, the parser could shift the `r#"\\n+"#` token and later use it to construct a `NewlineList`. This might then yield a parse tree like
      Term r#"\\n+"#     ╷ AndOr
      │    ├─NewlineList─┤     │
      │    └─Separator───┘     │
      └─Term───────────────────┘

    See the LALRPOP manual for advice on making your grammar LR(1).

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `"("` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `"<"` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `">"` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"!"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#">>"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[...]+"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[0-9]+"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[_|[:alpha:]]+=.+"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"\\{"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"case"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"for"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"if"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"until"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:60:5: 60:65: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"while"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `"("` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `"<"` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `">"` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"!"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#">>"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[...]+"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[0-9]+"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[_|[:alpha:]]+=.+"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"\\{"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"case"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"for"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"if"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"until"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:61:5: 61:83: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = NewlineList Term Separator (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"while"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:65:5: 65:67: Conflict detected

      when in this state:
    AND_IF = (*) r#"\\&\\&"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = AndOr (*) AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = AndOr (*) OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    OR_IF = (*) "||" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator AndOr (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `"||"` we can reduce to a `Term` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:65:5: 65:67: Conflict detected

      when in this state:
    AND_IF = (*) r#"\\&\\&"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = AndOr (*) AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = AndOr (*) OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    OR_IF = (*) "||" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term Separator AndOr (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"\\&\\&"#` we can reduce to a `Term` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:139:5: 139:95: Conflict detected

      when in this state:
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionBody = CompoundCommand (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionBody = CompoundCommand (*) RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    RedirectList = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    RedirectList = (*) RedirectList IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `"<"` we can reduce to a `FunctionBody` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:139:5: 139:95: Conflict detected

      when in this state:
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionBody = CompoundCommand (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionBody = CompoundCommand (*) RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    RedirectList = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    RedirectList = (*) RedirectList IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `">"` we can reduce to a `FunctionBody` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:139:5: 139:95: Conflict detected

      when in this state:
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionBody = CompoundCommand (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionBody = CompoundCommand (*) RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    RedirectList = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    RedirectList = (*) RedirectList IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#">>"#` we can reduce to a `FunctionBody` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:139:5: 139:95: Conflict detected

      when in this state:
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionBody = CompoundCommand (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionBody = CompoundCommand (*) RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    RedirectList = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    RedirectList = (*) RedirectList IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[0-9]+"#` we can reduce to a `FunctionBody` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:140:5: 140:131: Conflict detected

      when in this state:
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionBody = CompoundCommand RedirectList (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    RedirectList = RedirectList (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `"<"` we can reduce to a `FunctionBody` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:140:5: 140:131: Conflict detected

      when in this state:
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionBody = CompoundCommand RedirectList (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    RedirectList = RedirectList (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `">"` we can reduce to a `FunctionBody` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:140:5: 140:131: Conflict detected

      when in this state:
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionBody = CompoundCommand RedirectList (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    RedirectList = RedirectList (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#">>"#` we can reduce to a `FunctionBody` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:140:5: 140:131: Conflict detected

      when in this state:
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionBody = CompoundCommand RedirectList (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    RedirectList = RedirectList (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[0-9]+"#` we can reduce to a `FunctionBody` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Local ambiguity detected

    The problem arises after having observed the following symbols in the input:
      Pattern ")" Linebreak
    At that point, if the next token is a `"("`, then the parser can proceed in two different ways.

    First, the parser could execute the production at /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95, which would consume the top 3 token(s) from the stack and produce a `CaseItemNS`. This might then yield a parse tree like
      Pattern ")" Linebreak CaseItemNS
      ├─CaseItemNS────────┤          │
      ├─CaseListNS────────┘          │
      └─CaseListNS───────────────────┘

    Alternatively, the parser could shift the `"("` token and later use it to construct a `Subshell`. This might then yield a parse tree like
      Pattern ")" Linebreak "(" CompoundList ")" Linebreak
      │                     ├─Subshell─────────┤         │
      │                     ├─CompoundCommand──┤         │
      │                     ├─Command──────────┤         │
      │                     ├─PipeSequence─────┤         │
      │                     ├─Pipeline─────────┤         │
      │                     ├─AndOr────────────┤         │
      │                     ├─Term─────────────┤         │
      │                     └─CompoundList─────┘         │
      └─CaseItemNS───────────────────────────────────────┘

    See the LALRPOP manual for advice on making your grammar LR(1).

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `";;"` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `"<"` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `">"` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"!"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#">>"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Local ambiguity detected

    The problem arises after having observed the following symbols in the input:
      Pattern ")" Linebreak
    At that point, if the next token is a `r#"[...]+"#`, then the parser can proceed in two different ways.

    First, the parser could execute the production at /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95, which would consume the top 3 token(s) from the stack and produce a `CaseItemNS`. This might then yield a parse tree like
      Pattern ")" Linebreak CaseItemNS
      ├─CaseItemNS────────┤          │
      ├─CaseListNS────────┘          │
      └─CaseListNS───────────────────┘

    Alternatively, the parser could shift the `r#"[...]+"#` token and later use it to construct a `Word`. This might then yield a parse tree like
      Pattern ")" Linebreak r#"[...]+"#     ╷ Linebreak
      │                     ├─Word──────────┤         │
      │                     ├─SimpleCommand─┤         │
      │                     ├─Command───────┤         │
      │                     ├─PipeSequence──┤         │
      │                     ├─Pipeline──────┤         │
      │                     ├─AndOr─────────┤         │
      │                     ├─Term──────────┤         │
      │                     └─CompoundList──┘         │
      └─CaseItemNS────────────────────────────────────┘

    See the LALRPOP manual for advice on making your grammar LR(1).

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[0-9]+"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[_|[:alpha:]]+=.+"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"\\n+"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"\\{"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"case"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"for"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"if"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"until"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"while"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Local ambiguity detected

    The problem arises after having observed the following symbols in the input:
      CaseListNS Pattern ")" Linebreak
    At that point, if the next token is a `"("`, then the parser can proceed in two different ways.

    First, the parser could execute the production at /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95, which would consume the top 3 token(s) from the stack and produce a `CaseItemNS`. This might then yield a parse tree like
      CaseListNS Pattern ")" Linebreak CaseItemNS
      │          └─CaseItemNS────────┤          │
      ├─CaseListNS───────────────────┘          │
      └─CaseListNS──────────────────────────────┘

    Alternatively, the parser could shift the `"("` token and later use it to construct a `Subshell`. This might then yield a parse tree like
      Pattern ")" Linebreak "(" CompoundList ")" Linebreak
      │                     ├─Subshell─────────┤         │
      │                     ├─CompoundCommand──┤         │
      │                     ├─Command──────────┤         │
      │                     ├─PipeSequence─────┤         │
      │                     ├─Pipeline─────────┤         │
      │                     ├─AndOr────────────┤         │
      │                     ├─Term─────────────┤         │
      │                     └─CompoundList─────┘         │
      └─CaseItemNS───────────────────────────────────────┘

    See the LALRPOP manual for advice on making your grammar LR(1).

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `"<"` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `">"` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"!"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#">>"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Local ambiguity detected

    The problem arises after having observed the following symbols in the input:
      CaseListNS Pattern ")" Linebreak
    At that point, if the next token is a `r#"[...]+"#`, then the parser can proceed in two different ways.

    First, the parser could execute the production at /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95, which would consume the top 3 token(s) from the stack and produce a `CaseItemNS`. This might then yield a parse tree like
      CaseListNS Pattern ")" Linebreak CaseItemNS
      │          └─CaseItemNS────────┤          │
      ├─CaseListNS───────────────────┘          │
      └─CaseListNS──────────────────────────────┘

    Alternatively, the parser could shift the `r#"[...]+"#` token and later use it to construct a `Word`. This might then yield a parse tree like
      Pattern ")" Linebreak r#"[...]+"#     ╷ Linebreak
      │                     ├─Word──────────┤         │
      │                     ├─SimpleCommand─┤         │
      │                     ├─Command───────┤         │
      │                     ├─PipeSequence──┤         │
      │                     ├─Pipeline──────┤         │
      │                     ├─AndOr─────────┤         │
      │                     ├─Term──────────┤         │
      │                     └─CompoundList──┘         │
      └─CaseItemNS────────────────────────────────────┘

    See the LALRPOP manual for advice on making your grammar LR(1).

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[0-9]+"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[_|[:alpha:]]+=.+"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"\\n+"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"\\{"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"case"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"for"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"if"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"until"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:97:5: 97:95: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"while"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Local ambiguity detected

    The problem arises after having observed the following symbols in the input:
      "(" Pattern ")" Linebreak
    At that point, if the next token is a `"("`, then the parser can proceed in two different ways.

    First, the parser could execute the production at /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99, which would consume the top 4 token(s) from the stack and produce a `CaseItemNS`. This might then yield a parse tree like
      "(" Pattern ")" Linebreak CaseItemNS
      ├─CaseItemNS────────────┤          │
      ├─CaseListNS────────────┘          │
      └─CaseListNS───────────────────────┘

    Alternatively, the parser could shift the `"("` token and later use it to construct a `Subshell`. This might then yield a parse tree like
      "(" Pattern ")" Linebreak "(" CompoundList ")" Linebreak
      │                         ├─Subshell─────────┤         │
      │                         ├─CompoundCommand──┤         │
      │                         ├─Command──────────┤         │
      │                         ├─PipeSequence─────┤         │
      │                         ├─Pipeline─────────┤         │
      │                         ├─AndOr────────────┤         │
      │                         ├─Term─────────────┤         │
      │                         └─CompoundList─────┘         │
      └─CaseItemNS───────────────────────────────────────────┘

    See the LALRPOP manual for advice on making your grammar LR(1).

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `";;"` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `"<"` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `">"` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"!"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#">>"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Local ambiguity detected

    The problem arises after having observed the following symbols in the input:
      "(" Pattern ")" Linebreak
    At that point, if the next token is a `r#"[...]+"#`, then the parser can proceed in two different ways.

    First, the parser could execute the production at /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99, which would consume the top 4 token(s) from the stack and produce a `CaseItemNS`. This might then yield a parse tree like
      "(" Pattern ")" Linebreak CaseItemNS
      ├─CaseItemNS────────────┤          │
      ├─CaseListNS────────────┘          │
      └─CaseListNS───────────────────────┘

    Alternatively, the parser could shift the `r#"[...]+"#` token and later use it to construct a `Word`. This might then yield a parse tree like
      "(" Pattern ")" Linebreak r#"[...]+"#     ╷ Linebreak
      │                         ├─Word──────────┤         │
      │                         ├─SimpleCommand─┤         │
      │                         ├─Command───────┤         │
      │                         ├─PipeSequence──┤         │
      │                         ├─Pipeline──────┤         │
      │                         ├─AndOr─────────┤         │
      │                         ├─Term──────────┤         │
      │                         └─CompoundList──┘         │
      └─CaseItemNS────────────────────────────────────────┘

    See the LALRPOP manual for advice on making your grammar LR(1).

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[0-9]+"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[_|[:alpha:]]+=.+"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"\\n+"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"\\{"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"case"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"for"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"if"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"until"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) CompoundList DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItem = "(" Pattern ")" Linebreak (*) DSEMI Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DSEMI = (*) ";;" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"while"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:121:5: 121:126: Conflict detected

      when in this state:
    Elif = (*) r#"elif"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Else = (*) r#"else"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ElsePart = (*) Elif CompoundList Then CompoundList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ElsePart = Elif CompoundList Then CompoundList (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ElsePart = (*) Elif CompoundList Then CompoundList ElsePart ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ElsePart = Elif CompoundList Then CompoundList (*) ElsePart ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ElsePart = (*) Else CompoundList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"elif"#` we can reduce to a `ElsePart` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:121:5: 121:126: Conflict detected

      when in this state:
    Elif = (*) r#"elif"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Else = (*) r#"else"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ElsePart = (*) Elif CompoundList Then CompoundList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ElsePart = Elif CompoundList Then CompoundList (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ElsePart = (*) Elif CompoundList Then CompoundList ElsePart ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ElsePart = Elif CompoundList Then CompoundList (*) ElsePart ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ElsePart = (*) Else CompoundList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"else"#` we can reduce to a `ElsePart` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Local ambiguity detected

    The problem arises after having observed the following symbols in the input:
      CaseListNS "(" Pattern ")" Linebreak
    At that point, if the next token is a `"("`, then the parser can proceed in two different ways.

    First, the parser could execute the production at /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99, which would consume the top 4 token(s) from the stack and produce a `CaseItemNS`. This might then yield a parse tree like
      CaseListNS "(" Pattern ")" Linebreak CaseItemNS
      │          └─CaseItemNS────────────┤          │
      ├─CaseListNS───────────────────────┘          │
      └─CaseListNS──────────────────────────────────┘

    Alternatively, the parser could shift the `"("` token and later use it to construct a `Subshell`. This might then yield a parse tree like
      "(" Pattern ")" Linebreak "(" CompoundList ")" Linebreak
      │                         ├─Subshell─────────┤         │
      │                         ├─CompoundCommand──┤         │
      │                         ├─Command──────────┤         │
      │                         ├─PipeSequence─────┤         │
      │                         ├─Pipeline─────────┤         │
      │                         ├─AndOr────────────┤         │
      │                         ├─Term─────────────┤         │
      │                         └─CompoundList─────┘         │
      └─CaseItemNS───────────────────────────────────────────┘

    See the LALRPOP manual for advice on making your grammar LR(1).

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `"<"` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `">"` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"!"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#">>"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Local ambiguity detected

    The problem arises after having observed the following symbols in the input:
      CaseListNS "(" Pattern ")" Linebreak
    At that point, if the next token is a `r#"[...]+"#`, then the parser can proceed in two different ways.

    First, the parser could execute the production at /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99, which would consume the top 4 token(s) from the stack and produce a `CaseItemNS`. This might then yield a parse tree like
      CaseListNS "(" Pattern ")" Linebreak CaseItemNS
      │          └─CaseItemNS────────────┤          │
      ├─CaseListNS───────────────────────┘          │
      └─CaseListNS──────────────────────────────────┘

    Alternatively, the parser could shift the `r#"[...]+"#` token and later use it to construct a `Word`. This might then yield a parse tree like
      "(" Pattern ")" Linebreak r#"[...]+"#     ╷ Linebreak
      │                         ├─Word──────────┤         │
      │                         ├─SimpleCommand─┤         │
      │                         ├─Command───────┤         │
      │                         ├─PipeSequence──┤         │
      │                         ├─Pipeline──────┤         │
      │                         ├─AndOr─────────┤         │
      │                         ├─Term──────────┤         │
      │                         └─CompoundList──┘         │
      └─CaseItemNS────────────────────────────────────────┘

    See the LALRPOP manual for advice on making your grammar LR(1).

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[0-9]+"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"[_|[:alpha:]]+=.+"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"\\n+"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"\\{"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"case"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"for"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"if"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"until"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:99:5: 99:99: Conflict detected

      when in this state:
    AndOr = (*) AndOr AND_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) AndOr OR_IF Linebreak Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AndOr = (*) Pipeline ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    AssignmentWord = (*) r#"[_|[:alpha:]]+=.+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Bang = (*) r#"!"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    BraceGroup = (*) Lbrace CompoundList Rbrace ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Case = (*) r#"case"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseList Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak CaseListNS Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseClause = (*) Case Word In Linebreak Esac ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CaseItemNS = "(" Pattern ")" Linebreak (*) CompoundList Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix AssignmentWord ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) CmdPrefix IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CmdPrefix = (*) IORedirect ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) CompoundCommand RedirectList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) FunctionDefinition ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Command = (*) SimpleCommand ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) BraceGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) CaseClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) ForClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) IfClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) Subshell ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) UntilClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundCommand = (*) WhileClause ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) NewlineList Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = (*) Term Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    DGREAT = (*) r#">>"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    For = (*) r#"for"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    ForClause = (*) For Name Linebreak In WordList SequentialSeparator DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    FunctionDefinition = (*) Name "(" ")" Linebreak FunctionBody ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) DGREAT Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) "<" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IOFile = (*) ">" Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IORedirect = (*) Number IOFile ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    If = (*) r#"if"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList ElsePart Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    IfClause = (*) If CompoundList Then CompoundList Fi ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Lbrace = (*) r#"\\{"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Name = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Number = (*) r#"[0-9]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    PipeSequence = (*) PipeSequence "|" Command ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) Bang PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Pipeline = (*) PipeSequence ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) CmdPrefix Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SimpleCommand = (*) Word CmdSuffix ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Subshell = (*) "(" CompoundList ")" ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = (*) Term Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Until = (*) r#"until"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    UntilClause = (*) Until CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    While = (*) r#"while"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    WhileClause = (*) While CompoundList DoGroup ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Word = (*) r#"[...]+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#"while"#` we can reduce to a `CaseItemNS` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:58:5: 58:49: Conflict detected

      when in this state:
    CompoundList = Term (*) ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    CompoundList = Term (*) Separator ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    NewlineList = (*) r#"\\n+"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Separator = (*) NewlineList ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Separator = (*) SeparatorOp Linebreak ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    SeparatorOp = (*) r#";|\\&"# ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]
    Term = Term (*) Separator AndOr ["(", ")", ";;", "<", "<<", ">", "|", "||", r#""#, r#"!"#, r#";|\\&"#, r#"<<-"#, r#"<>"#, r#"<\\&"#, r#">>"#, r#">\\&"#, r#">\\|"#, r#"[...]+"#, r#"[0-9]+"#, r#"[_|[:alpha:]]+=.+"#, r#"\\&\\&"#, r#"\\n+"#, r#"\\{"#, r#"\\}"#, r#"case"#, r#"do"#, r#"done"#, r#"elif"#, r#"else"#, r#"esac"#, r#"fi"#, r#"for"#, r#"if"#, r#"in"#, r#"then"#, r#"until"#, r#"while"#, EOF]

    and looking at a token `r#";|\\&"#` we can reduce to a `CompoundList` but we can also shift

  /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:58:5: 58:49: Local ambiguity detected

    The problem arises after having observed the following symbols in the input:
      Pattern ")" Linebreak Term
    At that point, if the next token is a `r#"\\n+"#`, then the parser can proceed in two different ways.

    First, the parser could execute the production at /home/ki11errabbit/Documents/Programing-Projects/Rust/rsh/src/shell_grammar.lalrpop:58:5: 58:49, which would consume the top 1 token(s) from the stack and produce a `CompoundList`. This might then yield a parse tree like
      Pattern ")" Linebreak Term           ╷ Linebreak
      │                     └─CompoundList─┘         │
      └─CaseItemNS───────────────────────────────────┘

    Alternatively, the parser could shift the `r#"\\n+"#` token and later use it to construct a `NewlineList`. This might then yield a parse tree like
      Term r#"\\n+"#     ╷
      │    ├─NewlineList─┤
      │    └─Separator───┤
      └─CompoundList─────┘

    See the LALRPOP manual for advice on making your grammar LR(1).
